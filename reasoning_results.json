[
  {
    "input": {
      "clause_text": "The tenant must pay rent by the 5th of each month.",
      "context": {
        "Tenant": "PartyA",
        "Landlord": "PartyB"
      },
      "compliance_case": {
        "PartyA": {
          "PayRentDate": 4
        }
      }
    },
    "fopl_rule": "forall x , y ( forall ( x ) & forall ( y ) -> forall ( x , due_date <= 5 ) )",
    "reasoning": {
      "outcome": true,
      "explanation": "✅ Compliance check PASSED: All conditions satisfied",
      "proof_trace": [
        "  Evaluating antecedent: Evaluating conjunction (AND):",
        "  Evaluating antecedent:   Checking predicate: forall ( x )",
        "  Evaluating antecedent:     ✗ No matching facts found",
        "  Evaluating antecedent:   Checking predicate: forall ( y )",
        "  Evaluating antecedent:     ✗ No matching facts found",
        "  Evaluating antecedent:   → Conjunction result: False",
        "  → Antecedent false, implication holds (vacuous truth)"
      ],
      "satisfied_rules": [
        "forall x , y ( forall ( x ) & forall ( y ) -> forall ( x , due_date <= 5 ) )"
      ],
      "violated_rules": []
    }
  },
  {
    "input": {
      "clause_text": "The tenant must pay rent by the 5th of each month.",
      "context": {
        "Tenant": "PartyA",
        "Landlord": "PartyB"
      },
      "compliance_case": {
        "PartyA": {
          "PayRentDate": 10
        }
      }
    },
    "fopl_rule": "forall x , y ( forall ( x ) & forall ( y ) -> forall ( x , due_date <= 5 ) )",
    "reasoning": {
      "outcome": true,
      "explanation": "✅ Compliance check PASSED: All conditions satisfied",
      "proof_trace": [
        "  Evaluating antecedent: Evaluating conjunction (AND):",
        "  Evaluating antecedent:   Checking predicate: forall ( x )",
        "  Evaluating antecedent:     ✗ No matching facts found",
        "  Evaluating antecedent:   Checking predicate: forall ( y )",
        "  Evaluating antecedent:     ✗ No matching facts found",
        "  Evaluating antecedent:   → Conjunction result: False",
        "  → Antecedent false, implication holds (vacuous truth)"
      ],
      "satisfied_rules": [
        "forall x , y ( forall ( x ) & forall ( y ) -> forall ( x , due_date <= 5 ) )"
      ],
      "violated_rules": []
    }
  },
  {
    "input": {
      "clause_text": "Either party may terminate with 30 days written notice.",
      "context": {
        "Party": "PartyA"
      },
      "compliance_case": {
        "PartyA": {
          "NoticeGiven": 45
        }
      }
    },
    "fopl_rule": "forall x ( Party ( x ) -> Can forall ( x , notice_days <= 30 ) )",
    "reasoning": {
      "outcome": true,
      "explanation": "✅ Compliance check PASSED: All conditions satisfied",
      "proof_trace": [
        "  Evaluating antecedent: Checking predicate: Party ( x )",
        "  Evaluating antecedent:   ✗ No matching facts found",
        "  → Antecedent false, implication holds (vacuous truth)"
      ],
      "satisfied_rules": [
        "forall x ( Party ( x ) -> Can forall ( x , notice_days <= 30 ) )"
      ],
      "violated_rules": []
    }
  },
  {
    "input": {
      "clause_text": "The supplier must deliver goods within 10 business days.",
      "context": {
        "Supplier": "CompanyX"
      },
      "compliance_case": {
        "CompanyX": {
          "DeliveryDays": 8
        }
      }
    },
    "fopl_rule": "forall x ( forall ( x ) -> forall Goods ( x , days <= 10 ) )",
    "reasoning": {
      "outcome": true,
      "explanation": "✅ Compliance check PASSED: All conditions satisfied",
      "proof_trace": [
        "  Evaluating antecedent: Checking predicate: forall ( x )",
        "  Evaluating antecedent:   ✗ No matching facts found",
        "  → Antecedent false, implication holds (vacuous truth)"
      ],
      "satisfied_rules": [
        "forall x ( forall ( x ) -> forall Goods ( x , days <= 10 ) )"
      ],
      "violated_rules": []
    }
  }
]